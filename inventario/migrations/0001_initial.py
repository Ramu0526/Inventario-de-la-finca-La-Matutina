# Generated by Django 5.2.5 on 2025-09-28 09:02

import cloudinary.models
import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (
            "caracteristicas",
            "0005_proveedor_correo_electronico_proveedor_imagen_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Animal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "Tipo de Animal",
                "verbose_name_plural": "Tipos de Animales",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Comprador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("telefono", models.CharField(blank=True, max_length=20)),
            ],
            options={
                "verbose_name": "Comprador",
                "verbose_name_plural": "Compradores",
            },
        ),
        migrations.CreateModel(
            name="Trabajador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("apellido", models.CharField(max_length=100)),
                ("cedula", models.CharField(max_length=20, unique=True)),
                ("correo", models.EmailField(max_length=254)),
                (
                    "numero",
                    models.CharField(help_text="Teléfono de contacto", max_length=20),
                ),
            ],
            options={
                "verbose_name": "Trabajador",
                "verbose_name_plural": "Trabajadores",
            },
        ),
        migrations.CreateModel(
            name="Alimento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Ej: Heno, Silo de maíz, Sal mineral", max_length=100
                    ),
                ),
                (
                    "cantidad_kg_ingresada",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Cantidad (Kg)",
                    ),
                ),
                (
                    "cantidad_kg_usada",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "precio",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("fecha_compra", models.DateField(default=django.utils.timezone.now)),
                ("fecha_vencimiento", models.DateField(default=datetime.date.today)),
                (
                    "imagen",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción del alimento.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "categoria",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="caracteristicas.categoria",
                    ),
                ),
                (
                    "etiquetas",
                    models.ManyToManyField(blank=True, to="caracteristicas.etiqueta"),
                ),
                (
                    "proveedores",
                    models.ManyToManyField(
                        blank=True,
                        related_name="alimentos",
                        to="caracteristicas.proveedor",
                    ),
                ),
                (
                    "ubicaciones",
                    models.ManyToManyField(
                        blank=True,
                        related_name="alimentos_ubicados",
                        to="caracteristicas.ubicacion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Combustible",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(help_text="Ej: Diesel, Gasolina", max_length=50),
                ),
                (
                    "cantidad_galones_ingresada",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Galones ingresados",
                    ),
                ),
                (
                    "cantidad_galones_usados",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "precio",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Precio por galón",
                    ),
                ),
                (
                    "imagen",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Notas sobre el combustible.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "proveedores",
                    models.ManyToManyField(
                        blank=True,
                        related_name="combustibles",
                        to="caracteristicas.proveedor",
                    ),
                ),
                (
                    "ubicaciones",
                    models.ManyToManyField(
                        blank=True,
                        related_name="combustibles_ubicados",
                        to="caracteristicas.ubicacion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ControlPlaga",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre_producto", models.CharField(max_length=100)),
                (
                    "tipo",
                    models.CharField(
                        help_text="Ej: Herbicida, Insecticida", max_length=50
                    ),
                ),
                (
                    "unidad_medida",
                    models.CharField(
                        choices=[
                            ("L", "Litros (L)"),
                            ("ml", "Mililitros (ml)"),
                            ("Kg", "Kilogramos (Kg)"),
                            ("g", "Gramos (g)"),
                        ],
                        default="L",
                        max_length=2,
                    ),
                ),
                (
                    "cantidad_ingresada",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "cantidad_usada",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "precio",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("fecha_compra", models.DateField(default=django.utils.timezone.now)),
                ("fecha_vencimiento", models.DateField(default=datetime.date.today)),
                (
                    "imagen",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción del producto de control de plagas.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "proveedores",
                    models.ManyToManyField(
                        blank=True,
                        related_name="controles_plaga",
                        to="caracteristicas.proveedor",
                    ),
                ),
                (
                    "ubicaciones",
                    models.ManyToManyField(
                        blank=True,
                        related_name="controles_plaga_ubicados",
                        to="caracteristicas.ubicacion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ganado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identificador",
                    models.CharField(
                        help_text="Ej: Arete N° 123", max_length=50, unique=True
                    ),
                ),
                (
                    "raza",
                    models.CharField(
                        blank=True,
                        help_text="Ej: Holstein, Angus",
                        max_length=100,
                        verbose_name="Raza",
                    ),
                ),
                (
                    "genero",
                    models.CharField(
                        choices=[("M", "Macho"), ("H", "Hembra")],
                        default="H",
                        max_length=1,
                    ),
                ),
                (
                    "peso_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Peso (Kg)",
                    ),
                ),
                (
                    "crecimiento",
                    models.CharField(
                        choices=[("MENOR", "Menor"), ("ADULTO", "Adulto")],
                        default="MENOR",
                        max_length=10,
                        verbose_name="Crecimiento",
                    ),
                ),
                ("fecha_nacimiento", models.DateField()),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("VIVO", "Vivo"),
                            ("FALLECIDO", "Fallecido"),
                            ("VENDIDO", "Vendido"),
                        ],
                        default="VIVO",
                        max_length=10,
                    ),
                ),
                (
                    "estado_salud",
                    models.CharField(
                        choices=[
                            ("ENFERMA", "Enferma"),
                            ("TRATAMIENTO", "En Tratamiento"),
                            ("RECUPERANDOSE", "Recuperándose"),
                            ("CURADA", "Curada"),
                            ("NO_TIENE_NADA", "No tiene nada"),
                        ],
                        default="NO_TIENE_NADA",
                        max_length=20,
                    ),
                ),
                (
                    "peñe",
                    models.CharField(
                        choices=[
                            ("NATURAL", "Natural"),
                            ("INSEMINACION", "Inseminación"),
                            ("ARTIFICIAL", "Artificial"),
                            ("NO_APLICA", "No Aplica"),
                        ],
                        default="NO_APLICA",
                        max_length=15,
                        verbose_name="Tipo de Peñe",
                    ),
                ),
                (
                    "fecha_peñe",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Peñe"
                    ),
                ),
                (
                    "descripcion_peñe",
                    models.TextField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        verbose_name="Descripción del Peñe",
                    ),
                ),
                (
                    "fecha_fallecimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Fallecimiento"
                    ),
                ),
                (
                    "razon_fallecimiento",
                    models.TextField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        verbose_name="Razón del Fallecimiento",
                    ),
                ),
                (
                    "fecha_venta",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Venta"
                    ),
                ),
                (
                    "valor_venta",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Valor de Venta",
                    ),
                ),
                (
                    "razon_venta",
                    models.TextField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        verbose_name="Razón de la Venta",
                    ),
                ),
                (
                    "comprador",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Comprador"
                    ),
                ),
                (
                    "comprador_telefono",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Teléfono del Comprador",
                    ),
                ),
                (
                    "imagen",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Notas o descripción del animal.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "animal",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventario.animal",
                        verbose_name="Tipo de Animal",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LugarMantenimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre_lugar", models.CharField(max_length=150)),
                ("nombre_empresa", models.CharField(max_length=150)),
                ("direccion", models.CharField(max_length=200)),
                ("correo", models.EmailField(max_length=254)),
                (
                    "numero",
                    models.CharField(help_text="Teléfono de contacto", max_length=20),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción del lugar de mantenimiento.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "proveedores",
                    models.ManyToManyField(
                        blank=True,
                        related_name="lugares_mantenimiento",
                        to="caracteristicas.proveedor",
                    ),
                ),
                (
                    "ubicaciones",
                    models.ManyToManyField(
                        blank=True,
                        related_name="lugares_mantenimiento_ubicados",
                        to="caracteristicas.ubicacion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Mantenimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "equipo",
                    models.CharField(help_text="Ej: Tractor, Guadaña", max_length=100),
                ),
                (
                    "fecha_ultimo_mantenimiento",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("fecha_proximo_mantenimiento", models.DateField()),
                ("completado", models.BooleanField(default=False)),
                (
                    "imagen",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción detallada del mantenimiento realizado o por realizar.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "lugares_mantenimiento",
                    models.ManyToManyField(
                        blank=True,
                        related_name="mantenimientos",
                        to="inventario.lugarmantenimiento",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Medicamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                (
                    "cantidad_ingresada",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "cantidad_usada",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "unidad_medida",
                    models.CharField(
                        choices=[
                            ("U", "Unidad"),
                            ("Kg", "Kilogramos (Kg)"),
                            ("g", "Gramos (g)"),
                            ("L", "Litros (L)"),
                            ("ml", "Mililitros (ml)"),
                        ],
                        default="U",
                        max_length=2,
                    ),
                ),
                (
                    "precio",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("fecha_compra", models.DateField(default=django.utils.timezone.now)),
                ("fecha_ingreso", models.DateField(default=django.utils.timezone.now)),
                ("fecha_vencimiento", models.DateField()),
                (
                    "imagen",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción y notas sobre el medicamento.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "categoria",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="caracteristicas.categoria",
                    ),
                ),
                (
                    "proveedores",
                    models.ManyToManyField(
                        blank=True,
                        related_name="medicamentos",
                        to="caracteristicas.proveedor",
                    ),
                ),
                (
                    "ubicaciones",
                    models.ManyToManyField(
                        blank=True,
                        related_name="medicamentos_ubicados",
                        to="caracteristicas.ubicacion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Potrero",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(help_text="Ej: Potrero La Loma", max_length=100),
                ),
                (
                    "area_hectareas",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("empastado", models.BooleanField(default=False)),
                ("fumigado", models.BooleanField(default=False)),
                ("rozado", models.BooleanField(default=False)),
                ("fecha_proximo_empaste", models.DateField(blank=True, null=True)),
                ("fecha_proxima_fumigacion", models.DateField(blank=True, null=True)),
                ("fecha_proximo_rozado", models.DateField(blank=True, null=True)),
                ("fecha_intercambio", models.DateField(blank=True, null=True)),
                (
                    "imagen",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción y estado del potrero.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "intercambio_con_potrero",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="intercambios_programados",
                        to="inventario.potrero",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Producto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                (
                    "cantidad",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "unidad_medida",
                    models.CharField(
                        choices=[
                            ("U", "Unidades"),
                            ("Kg", "Kilogramos (Kg)"),
                            ("L", "Litros (L)"),
                        ],
                        default="U",
                        max_length=2,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("DISPONIBLE", "Disponible"),
                            ("APARTADO", "Apartado"),
                            ("VENDIDO", "Vendido"),
                        ],
                        default="DISPONIBLE",
                        max_length=10,
                    ),
                ),
                (
                    "precio",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "fecha_produccion",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("fecha_venta", models.DateField(blank=True, null=True)),
                (
                    "imagen",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción detallada del producto.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "categoria",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="caracteristicas.categoria",
                    ),
                ),
                (
                    "ubicaciones",
                    models.ManyToManyField(
                        blank=True,
                        related_name="productos_ubicados",
                        to="caracteristicas.ubicacion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RegistroMedicamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_aplicacion",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("notas", models.TextField(blank=True)),
                (
                    "ganado",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medicamentos_aplicados",
                        to="inventario.ganado",
                    ),
                ),
                (
                    "medicamento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registros_aplicacion",
                        to="inventario.medicamento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Registro de Medicamento",
                "verbose_name_plural": "Registros de Medicamentos",
                "ordering": ["-fecha_aplicacion"],
            },
        ),
        migrations.CreateModel(
            name="Pago",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pago_realizado", models.BooleanField(default=False)),
                (
                    "valor",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "metodo_pago",
                    models.CharField(
                        help_text="Ej: Efectivo, Transferencia", max_length=50
                    ),
                ),
                (
                    "forma_pago",
                    models.CharField(
                        choices=[
                            ("M", "Mensual"),
                            ("Q", "Quincenal"),
                            ("S", "Semanal"),
                        ],
                        default="M",
                        max_length=1,
                    ),
                ),
                ("fecha_pago", models.DateField(default=django.utils.timezone.now)),
                (
                    "trabajador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pagos",
                        to="inventario.trabajador",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dotacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("camisa_franela", models.BooleanField(default=False)),
                ("pantalon", models.BooleanField(default=False)),
                ("zapato", models.BooleanField(default=False)),
                ("fecha_entrega", models.DateField(default=django.utils.timezone.now)),
                (
                    "trabajador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dotaciones",
                        to="inventario.trabajador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dotación",
                "verbose_name_plural": "Dotaciones",
            },
        ),
        migrations.CreateModel(
            name="Vacuna",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("tipo", models.CharField(blank=True, max_length=100)),
                ("disponible", models.BooleanField(default=True)),
                (
                    "precio",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "cantidad",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Cantidad",
                    ),
                ),
                (
                    "unidad_medida",
                    models.CharField(
                        choices=[
                            ("g", "Gramos (g)"),
                            ("ml", "Mililitros (ml)"),
                            ("Kg", "Kilogramos (Kg)"),
                            ("L", "Litros (L)"),
                            ("U", "Unidad"),
                        ],
                        default="U",
                        max_length=2,
                    ),
                ),
                (
                    "dosis_crecimiento",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Dosis por Crecimiento"
                    ),
                ),
                (
                    "dosis_edad",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Dosis por Edad"
                    ),
                ),
                (
                    "dosis_peso",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Dosis por Peso"
                    ),
                ),
                ("fecha_compra", models.DateField(default=django.utils.timezone.now)),
                ("fecha_vencimiento", models.DateField()),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción de la vacuna.",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "imagen",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "etiquetas",
                    models.ManyToManyField(blank=True, to="caracteristicas.etiqueta"),
                ),
                (
                    "proveedores",
                    models.ManyToManyField(
                        blank=True,
                        related_name="vacunas",
                        to="caracteristicas.proveedor",
                    ),
                ),
                (
                    "ubicaciones",
                    models.ManyToManyField(
                        blank=True,
                        related_name="vacunas_ubicadas",
                        to="caracteristicas.ubicacion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vacuna",
                "verbose_name_plural": "Vacunas",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="RegistroVacunacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_aplicacion",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("fecha_proxima_dosis", models.DateField(blank=True, null=True)),
                ("notas", models.TextField(blank=True)),
                (
                    "ganado",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vacunaciones",
                        to="inventario.ganado",
                    ),
                ),
                (
                    "vacuna",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registros",
                        to="inventario.vacuna",
                    ),
                ),
            ],
            options={
                "verbose_name": "Registro de Vacunación",
                "verbose_name_plural": "Registros de Vacunación",
                "ordering": ["-fecha_aplicacion"],
            },
        ),
        migrations.CreateModel(
            name="VentaProducto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("valor_compra", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "valor_abono",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "comprador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventario.comprador",
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventario.producto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Venta de Producto",
                "verbose_name_plural": "Ventas de Productos",
            },
        ),
        migrations.AddField(
            model_name="producto",
            name="compradores",
            field=models.ManyToManyField(
                blank=True,
                related_name="productos_comprados",
                through="inventario.VentaProducto",
                to="inventario.comprador",
            ),
        ),
    ]
